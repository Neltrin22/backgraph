type Flight {
    id: ID!
    flightNumber: String!
    origin: Airport!
    destination: Airport!
    seatsAvailable: Int!
    departureDate: String!
    departureTime: String!
    arrivalDate: String!
    arrivalTime: String!
    price: Float!
    distance: Float!
}

type Airport {
    id: ID!
    airportCode: String!
    airportName: String!
    airportCity: String!
    airportCountry: String!
    latitude: Float!
    longitude: Float!
    origin: [Flight!]!
    destination: [Flight!]!
}


type Query{
    allFlights: [Flight]
    flightById(id: ID!): Flight
    #searchFlights(origin: String!, destination: String!, departureDate: String!, minPrice: Float, maxPrice: Float): [Flight]
    findFlightsByOriginDestinationDate(departureDate: String!, origin: ID!, destination: ID!): [Flight]
    findFlightsByOriginDestinationDateFilteredByDepartureTime(departureDate: String!, origin: ID!, destination: ID!, departureTime: String!, finalDepartureTime: String): [Flight]
    findFlightsByOriginDestinationDateFilteredByArrivalTime(departureDate: String!, origin: ID!, destination: ID!, arrivalTime: String!, finalArrivalTime: String): [Flight]
}

type Mutation{
    addFlight(id: ID!, flightNumber: String!, seatsAvailable: Int!, origin: String!, destination: String!,departureTime: String!, arrivalTime: String!, price: Float!, distance: Float!, departureDate: String!, arrivalDate: String!): Flight
}